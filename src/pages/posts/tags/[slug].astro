---
import type { CollectionEntry } from "astro:content";
import PostPreview from "../../../components/PostPreview.astro";
import BaseLayout from "../../../layouts/BaseLayout.astro";
import { getPosts } from "../../../utils/getPosts";

export async function getStaticPaths() {
	const entries = await getPosts();
	const staticPaths = new Map();
	for (let entry of entries) {
		if (entry.data.tags) {
			for (let tag of entry.data.tags) {
				if (staticPaths.has(tag)) {
					staticPaths.get(tag).push(entry);
				} else {
					staticPaths.set(tag, [entry]);
				}
			}
		}
	}
	let result = [];
	for (let [tag, entries] of staticPaths.entries()) {
		result.push({
			params: {
				slug: tag,
			},
			props: { tag, entries },
		});
	}
	return result;
}

interface Props {
	tag: string;
	entries: CollectionEntry<"posts">[];
}

const { tag, entries } = Astro.props;
---
<BaseLayout title={`${tag} - Josh Freedman`}>
	<section>
		<header>
			<h2>All Posts Tagged "{tag}"</h2>
		</header>
		<div class="posts-container">
			{
				entries.map((entry) => (
					<PostPreview
						title={entry.data.title}
						tagline={entry.data.tagline}
						datePosted={entry.data.datePosted}
						slug={entry.slug}
						tags={entry.data.tags}
					/>
				))
			}
		</div>
	</section>
</BaseLayout>

<style>
	section {
		display: flex;
		gap: 2rem;
		flex-direction: column;
	}
	.posts-container {
		display: flex;
		gap: 1.5rem;
		flex-direction: column;
	}
</style>
